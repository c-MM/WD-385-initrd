#!/bin/busybox sh

# Install Busybox
/bin/busybox mkdir -p /usr/sbin /usr/bin /sbin /bin
/bin/busybox --install -s 

# Mount the /proc and /sys filesystems.
mount -t proc none /proc
mount -t sysfs none /sys
mount -t devtmpfs none /dev

# Adding mdev support
echo /sbin/mdev > /proc/sys/kernel/hotplug
mdev -s

#setting up network
#ifconfig eth2 up
#udhcpc -t 5 -q -s /bin/simple.script

#rescue_shell
rescue_shell() {

  #setting up network
	/sbin/getmac
	ifconfig eth0 up
	udhcpc -t 5 -q -s /bin/simple.script

#start ssh	
	dropbear -B -R -b /etc/dropbear/banner
	echo "Something went wrong. Dropping to a shell."

# Run UART shell
	exec 0</dev/console
	exec 1>/dev/console
	exec 2>/dev/console
	exec setsid cttyhack sh
}


ask_for_stop () {
	key='boot'
	read -r -p "### Press any key to stop and run shell... (10)" -n1 -t2 key
	if [ "$key" != 'boot' ] || [ $BUTTON_STATUS == 1 ]; then
		rescue_shell
	fi
}



#Initial Raid
echo 'DEVICE /dev/sd??*' > /etc/mdadm.conf
mdadm -Eb /dev/sd??* >> /etc/mdadm.conf
mdadm -As --force
sleep 5 # disk not ready?
mdadm --assemble --scan

# Mount the config files
ubiattach /dev/ubi_ctrl -m 5
sleep 2
mount -t ubifs ubi0:config /mnt/config

# Mount the root filesystem.
ask_for_stop
mount -o rw $(findfs LABEL=rootfs)  /mnt/root

# Clean up.
ls mnt/root/sbin/init >/dev/null 2>&1
if [ $?=0 ]; then
        echo "Unmounting and Switch to OS"
        # Copy MAC
        sleep 1
        cp /mnt/config/mac_addr /mnt/root/etc
        umount /mnt/config
        umount /proc
        umount /sys
        umount /dev
        exec switch_root /mnt/root /sbin/init
 else
        rescue_shell
fi

# Boot the real thing.
exec switch_root /mnt/root /sbin/init

